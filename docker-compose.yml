version: '3.8'

services:
  db:
    image: postgres:13
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    env_file:
      - .env
    ports:
      - "5050:80"

  backend:
    build: ./backend
    restart: always
    command: sh -c "python3 manage.py makemigrations && python3 manage.py migrate && uvicorn djangoBack.asgi:application --host 0.0.0.0 --port 8000"
    volumes:
      - ./backend:/app
      - media_volume:/app/media
    env_file:
      - .env
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8000/health/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
      build: ./frontend
      restart: always
      command: npm run dev -- --host 0.0.0.0
      ports:
        - "5173:5173"
      volumes:
        - ./frontend:/app
        - /app/node_modules
      depends_on:
        backend:
          condition: service_healthy
        # nginx:
        #   condition: service_started


  nginx:
      image: nginx:latest
      restart: always
      ports:
        - "80:80"
        - "443:443"
      volumes:
        - ./localhost+2.pem:/etc/nginx/ssl/localhost+2.pem:ro
        - ./localhost+2-key.pem:/etc/nginx/ssl/localhost+2-key.pem:ro
        - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
        - media_volume:/media
      depends_on:
        # frontend:
        #   condition: service_started
        backend:
          condition: service_started


  redis:
    image: "redis:alpine"
    restart: always
    ports:
      - "6379:6379"

volumes:
  postgres_data:
  media_volume:



